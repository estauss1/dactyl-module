#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap_5x6 {
        compatible = "zmk,keymap";
        // 5x6 matrix transform (keymaps need to map onto each key)
        // RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)    RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) 
        // RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)    RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) 
        // RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)    RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) 
        // RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)    RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) 
        //                 RC(4,2) RC(4,3) RC(4,4)                    RC(4,7) RC(4,8) RC(4,9) 
        //                 RC(5,2) RC(5,3) RC(5,4) RC(5,5)    RC(5,6) RC(5,7) RC(5,8) RC(5,9) 
         layer_0 {
             display-name = "ZERO";

             bindings = <
                 &kp DEL    &kp N1  &kp N2    &kp N3   &kp N4    &kp N5     &kp N6 &kp N7        &kp N8     &kp N9     &kp N0    &kp MINUS
                 &kp TAB    &kp Q   &kp W     &kp E    &kp R     &kp T      &kp Y  &kp U         &kp I      &kp O      &kp P     &kp EQUAL
                 &kp LCTRL  &kp A   &kp S     &kp D    &kp F     &kp G      &kp H  &kp J         &kp K      &kp L      &kp SEMI  &kp SQT
                 &kp LSHIFT &kp Z   &kp X     &kp C    &kp V     &kp B      &kp N  &kp M         &kp COMMA  &kp PERIOD &kp SLASH &kp BACKSLASH
                                    &kp GRAVE &kp LALT &kp SPACE            &kp BACKSPACE &kp LBKT   &kp RBKT
                                    &kp ESC   &kp LGUI &kp DEL   &kp TAB    &mo 1  &kp ENTER     &kp LSHIFT &out OUT_BLE
             >;
         };
        layer_1 {
            display-name = "ONE";
            
            bindings = <
                &studio_unlock &kp F1   &kp F2   &kp F3    &kp F4      &kp F5             &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                &bt BT_NXT     &kp N1   &kp N2   &kp N3    &kp N4      &kp N5             &kp N6 &kp N7 &kp N8 &kp N9 &kp N0  &kp  F12
                &none          &none    &kp UP   &none     &kp END     &none              &none  &none  &none  &none  &none   &none
                &none          &kp LEFT &kp DOWN &kp RIGHT &kp K_PASTE &none              &none  &none  &none  &none  &none   &none
                                        &none    &none     &none                                 &none  &none  &none
                                        &kp INS  &none     &bt BT_CLR  &kp PRINTSCREEN    &none  &none  &none  &none
            >;
        };
        extra1 {
            status = "reserved";
        };
        extra2 {
            status = "reserved";
        };
        extra3 {
            status = "reserved";
        };
        extra4 {
            status = "reserved";
        };
        extra5 {
            status = "reserved";
        };
        extra6 {
            status = "reserved";
        };
        //
        // layer to make testing if keys work easier
        //layer_testing {
        //    display-name = "TESTING";

        //    bindings = <
        //        &kp A    &kp A  &kp A    &kp A   &kp A    &kp A     &kp A    &kp A        &kp A     &kp A     &kp A    &kp A
        //        &kp A    &kp A  &kp A    &kp A   &kp A    &kp A     &kp A    &kp A        &kp A     &kp A     &kp A    &kp A
        //        &kp A    &kp A  &kp A    &kp A   &kp A    &kp A     &kp A    &kp A        &kp A     &kp A     &kp A    &kp A
        //        &kp A    &kp A  &kp A    &kp A   &kp A    &kp A     &kp A    &kp A        &kp A     &kp A     &kp A    &kp A
        //                        &kp A    &kp A   &kp A                       &kp A        &kp A     &kp A
        //                        &kp A    &kp A   &kp A    &kp A     &kp A    &kp A        &kp A     &kp A
        //    >;
        //};
    };
};
